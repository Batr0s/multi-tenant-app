# In our configuration, the cert.crt and cert.key settings reflect the location where we created our SSL certificate. 
# You will need to update the server_name and proxy_redirect lines with your own domain name. 
# There is some additional Nginx magic going on as well that tells requests to be read by Nginx and rewritten on the response side to ensure the reverse proxy is working.

# Install Nginx
# =============
# Update your package lists and install Nginx:
# sudo apt-get update
# sudo apt-get install nginx
# nginx -v
# Get a Certificate
# =================
# Next, you will need to purchase or create an SSL certificate. These commands are for a self-signed certificate, but you should get an officially signed certificate if you want to avoid browser warnings.
# Move into the proper directory and generate a certificate:
# cd /etc/nginx
# sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/nginx/cert.key -out /etc/nginx/cert.crt
# You will be prompted to enter some information about the certificate. You can fill this out however you’d like; just be aware the information will be visible in the certificate properties. We’ve set the number of bits to 2048 since that’s the minimum needed to get it signed by a CA. If you want to get the certificate signed, you will need to create a CSR.
# Configure nginx
# ===============
# Edit: /etc/nginx/sites-available/default
# add following code
# Test and apply changes: 
# sudo nginx -t
# sudo systemctl restart nginx


# Listens to port 80 with HTTP and redirects to port 443 with HTTPS
# the standard HTTPS port 443 is used automatically by browsers when encountering an HTTPS URL without a specified port(e.g 80).
server {
  listen 80;
  return 301 https://$host:$request_uri;
}

# Listens to port 443 with SSL(HTTPS) and redirects to http://app:3000/ 
server {
  listen 443 ssl;
  server_name _; 

  # Path to your self-signed certificate and key files
  ssl_certificate /etc/nginx/cert.crt;
  ssl_certificate_key /etc/nginx/cert.key;

  #ssl on;
  ssl_session_cache  builtin:1000  shared:SSL:10m;
  ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
  ssl_prefer_server_ciphers on;

  location / {
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    # Use the name of the container ('app') as ip
    proxy_pass http://app:3000/;
    proxy_ssl_session_reuse off;
    proxy_redirect off;
  }
}